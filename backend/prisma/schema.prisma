// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  avatar    String?
  systems   DesignSystem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DesignSystem {
  id          String     @id @default(uuid())
  name        String
  description String?
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  foundations Foundation[]
  components  Component[]
  tokens      Token[]
  docs        DocBlock[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Foundation {
  id        String       @id @default(uuid())
  type      String       // "colors", "typography", "spacing", "shadows", etc.
  values    Json         // Store the actual foundation values as JSON
  systemId  String
  system    DesignSystem @relation(fields: [systemId], references: [id], onDelete: Cascade)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Component {
  id          String       @id @default(uuid())
  name        String
  category    String       // "button", "input", "card", etc.
  props       Json         // Component properties and configuration
  styles      Json         // Styling configuration
  code        String?      // Generated code snippet
  systemId    String
  system      DesignSystem @relation(fields: [systemId], references: [id], onDelete: Cascade)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Token {
  id        String       @id @default(uuid())
  name      String       // Token name (e.g., "primary-color", "border-radius-sm")
  category  String       // "colors", "spacing", "typography", "effects"
  value     String       // Token value (e.g., "#3B82F6", "8px", "16px")
  systemId  String
  system    DesignSystem @relation(fields: [systemId], references: [id], onDelete: Cascade)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model DocBlock {
  id        String       @id @default(uuid())
  title     String
  content   String       // Markdown content
  order     Int          @default(0)
  systemId  String
  system    DesignSystem @relation(fields: [systemId], references: [id], onDelete: Cascade)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}
